// Implementation of FlashCapsLock as a Singleton Class
// in RISC OS Open DDE C++ (CFront)
//
//  Author: Paolo Fabio Zaino
// License: Copyright by Paolo Fabio Zaino, all rights reserved
//          distributed under CDDL v1.1

#include <iostream.h>
#include <time.h>
#include "CLClass.h"

/*************************
 * Main program
 *************************/
int main()
{
	// Let's create CapsLock1:
	cout << "First Singleton: CapsLock1" << endl;

	CapsSingleton* MyCapsLock1
			= CapsSingleton::getInstance();

	// Let's check if MyCapsLock1 is working ok:
	MyCapsLock1->print();
	MyCapsLock1->toggle();

	// Let's display MyCapsLock1 info:
	cout << "Address of MyCapsLock1: " <<
			MyCapsLock1 << endl;
	cout << endl;

	// Let's create MyCapsLock2:
	cout << "Second Singleton MyCapsLock2:" << endl;

	CapsSingleton* MyCapsLock2
			= CapsSingleton::getInstance();

	// Let's check if MyCapsLock2 is working ok:
	MyCapsLock2->print();
	MyCapsLock2->toggle();

	// Let's display MyCapsLock2 info:
	cout << "Address of MyCapsLock2: " << MyCapsLock2 << endl;
	cout << endl;

	// Let's start the infinite loop
	while (1)
	{
		if (MyCapsLock1->getState() == 1)
		{
			MyCapsLock1->print();
			MyCapsLock1->toggle();
		} else {
			MyCapsLock2->print();
			MyCapsLock2->toggle();
		}
		clock_t startTime = clock();
		while (clock() - startTime < CLOCKS_PER_SEC)
		{
			// Here we wait
		}
	}

	return 0;
}
